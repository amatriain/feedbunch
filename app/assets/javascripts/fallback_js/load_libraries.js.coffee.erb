# Load libraries from a CDN using fallback.js
# If the CDN goes down, fall back to serving a local asset.

fallback.load(
  {
    # JQuery
    jQuery: [
      '//code.jquery.com/jquery-2.1.4.min.js',
      '<%= asset_path 'jquery' %>'
    ],

    # angularJS
    angular: [
      '//ajax.googleapis.com/ajax/libs/angularjs/1.3.15/angular.min.js',
      '<%= asset_path 'angular' %>'
    ],

    # angular-sanitize
    'angular.module("ngSanitize")': [
      '//ajax.googleapis.com/ajax/libs/angularjs/1.3.15/angular-sanitize.min.js',
      '<%= asset_path 'angular-sanitize' %>'
    ]

    # angular-touch
    'angular.module("ngTouch")': [
      '//ajax.googleapis.com/ajax/libs/angularjs/1.3.15/angular-touch.min.js',
      '<%= asset_path 'angular-touch' %>'
    ],

    # Bootstrap
    '$.fn.modal': [
      '//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js',
      '<%= asset_path 'bootstrap-sass-official/assets/javascripts/bootstrap' %>'
    ]

    # Main application.js manifest
    feedbunch_application: [
      '<%= asset_path 'application' %>'
    ]
  },
  {
    # Delay loading each library until its dependencies are loaded.
    shim:
      {
        # angularJS (needs jQuery)
        angular: ['jQuery'],

        # angular-sanitize (needs angularJS)
        'angular.module("ngSanitize")': ['angular'],

        # angular-touch (needs angularJS)
        'angular.module("ngTouch")': ['angular'],

        # Bootstrap (needs jQuery)
        '$.fn.modal': ['jQuery'],

        # Main application.js manifest (needs most previous libraries)
        feedbunch_application: [
          'jQuery',
          'angular',
          'angular.module("ngSanitize")',
          '$.fn.modal']
      }
  })